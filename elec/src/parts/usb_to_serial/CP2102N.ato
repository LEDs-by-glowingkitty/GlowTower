import Capacitor from "generics/capacitors.ato"
import Resistor from "generics/resistors.ato"
import Power from "generics/interfaces.ato"
import SP0503BAHTG from "../esd_protection/SP0503BAHTG.ato"
import UMH3N from "../transistors/UMH3N.ato"

component CP2102N:
    """
    This is the CP2102N USB to serial IC from Silicon Labs.
    In comparison to the CP2102, the CP2102N has an increased maximum data rate of 3Mbps (vs 2Mbps) and a few additional features.
    Datasheet: https://www.silabs.com/documents/public/data-sheets/cp2102n-datasheet.pdf
    """

    # component CP2102N-A02-GQFN24R
    footprint = "QFN-24_L4.0-W4.0-P0.50-TL-EP2.6"
    lcsc_id = "C969151"
    mpn = "C969151"

    # Add capacitors for the VREGIN and VDD pins
    small_cap = new Capacitor
    small_cap.capacitance = 0.1uF +/- 10%
    small_cap.footprint = "C0402"
    small_cap.mpn = "C307331"

    large_cap = new Capacitor
    large_cap.capacitance = 10uF +/- 20%
    large_cap.footprint = "C0603"
    large_cap.mpn = "C96446"

    # Add voltage divider for VBUS pin
    # TODO: check with real hardware testing if the values work. Theory: if VBUS is 5V -> 5V * (5100 / (5100 + 20000)) = 1.1V, if VBUS is 20V -> 20V * (5100 / (5100 + 20000)) = 4.4V
    # Test plan:
    # - unsolder the existing voltage divider on the Adafruit CP2102N board
    # - connect variable power supply to VBUS pin
    # - test flashing with 1.1V input
    # - test flashing with 3.3V input
    # - test flashing with 4.2V input
    # - then also test disconnecting VBUS from REGIN and connect REGIN and VDD to fixed 3.3V input
    # TODO: consider turning on/off CP2102N with MOSFETs, like with GlowSign PCB (I think inspired by Adafruit)
    voltage_divider_r1 = new Resistor
    voltage_divider_r1.resistance = 20000ohm +/- 1%
    voltage_divider_r1.footprint = "R0402"
    voltage_divider_r1.mpn = "C25765"

    voltage_divider_r2 = new Resistor
    voltage_divider_r2.resistance = 5100ohm +/- 1% 
    voltage_divider_r2.footprint = "R0402"
    voltage_divider_r2.mpn = "C25905"

    # Add a pull up resistor for the RSTb pin.
    pull_up_resistor = new Resistor
    pull_up_resistor.resistance = 1000ohm +/- 1%
    pull_up_resistor.footprint = "R0402"
    pull_up_resistor.mpn = "C11702"

    # Add ESD protection for the D+ and D- lines
    esd_protection = new SP0503BAHTG

    # Add auto-reset dual transistor
    auto_reset_transistor = new UMH3N
    # Auto program:
    # DTR   RTS -->	EN 	IO0
    # 1	    1		1	1
    # 0	    0		1	1
    # 1	    0		0	1
    # 0	    1		1	0

    # pins
    signal RI_CLK ~ pin 1           # Ring Indicator/Clock Input
    signal GND ~ pin 2              # Ground
    signal Dplus ~ pin 3            # Data+ Line
    signal Dminus ~ pin 4           # Data- Line
    signal VIO ~ pin 5              # Voltage Input/Output
    signal VDD ~ pin 6              # Power Supply
    signal VREGIN ~ pin 7           # Voltage Regulator Input
    signal VBUS ~ pin 8             # USB Bus Voltage
    signal RSTb ~ pin 9             # Reset. The RSTb pin will be driven low during power-on and power failure reset events
    signal NC ~ pin 10
    signal GPIO_3_WAKEUP ~ pin 11   # General Purpose Input/Output 3 / Wakeup
    signal GPIO_2_RS485 ~ pin 12    # General Purpose Input/Output 2 / RS485
    signal GPIO_1_RXT ~ pin 13      # General Purpose Input/Output 1 / Receive Transmit
    signal GPIO_0_TXT ~ pin 14      # General Purpose Input/Output 0 / Transmit
    signal SUSPENDb ~ pin 15        # Suspend
    NC ~ pin 16
    signal SUSPEND ~ pin 17         # Suspend
    signal CTS ~ pin 18             # Clear To Send
    signal RTS ~ pin 19             # Request To Send
    signal RXD ~ pin 20             # Receive Data
    signal TXD ~ pin 21             # Transmit Data
    signal DSR ~ pin 22             # Data Set Ready
    signal DTR ~ pin 23             # Data Terminal Ready
    signal DCD ~ pin 24             # Data Carrier Detect
    GND ~ pin 25                    # Ground

    # Add a 3.3V power supply
    power_3_3v = new Power

    # Add a VBUS power supply
    power_vbus = new Power

    # Connect the CP2102N to 3.3V
    power_3_3v.vcc ~ VREGIN
    power_3_3v.vcc ~ VDD
    power_3_3v.vcc ~ VIO
    power_3_3v.gnd ~ GND

    # Connect the CP2102N to VBUS via a voltage divider, to protect the CP2102N from overvoltage
    power_vbus.vcc ~ voltage_divider_r1.p1
    power_vbus.gnd ~ GND

    # Connect the voltage divider to the CP2102N
    voltage_divider_r1.p2 ~ voltage_divider_r2.p1
    voltage_divider_r1.p2 ~ VBUS
    voltage_divider_r2.p2 ~ GND

    # Connect the capacitors to the input voltage for the CP2102N
    small_cap.p1 ~ power_3_3v.vcc
    small_cap.p2 ~ power_3_3v.gnd
    large_cap.p1 ~ power_3_3v.vcc
    large_cap.p2 ~ power_3_3v.gnd

    # Connect the pull up resistor to the RSTb pin, so it is high by default
    pull_up_resistor.p1 ~ RSTb
    pull_up_resistor.p2 ~ power_3_3v.vcc